/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Addresses } from "./addresses";
import { PhoneNumbers } from "./phonenumbers";
import { User } from "./user";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Account
 */
export class Account extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Addresses })
    @Expose({ name: "addresses" })
    @Type(() => Addresses)
    addresses: Addresses[];

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "industry" })
    industry: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_activity_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    lastActivityAt: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "number_of_employees" })
    numberOfEmployees: number;

    @SpeakeasyMetadata()
    @Expose({ name: "owner" })
    @Type(() => User)
    owner?: User;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_id" })
    ownerId: string;

    @SpeakeasyMetadata({ elemType: PhoneNumbers })
    @Expose({ name: "phone_numbers" })
    @Type(() => PhoneNumbers)
    phoneNumbers: PhoneNumbers[];

    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "website" })
    website: string;
}
