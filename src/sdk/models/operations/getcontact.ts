/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetContactPathParams extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=contact_id",
  })
  contactId: string;
}

export class GetContactQueryParams extends SpeakeasyBase {
  /**
   * Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;
}

export class GetContactHeaders extends SpeakeasyBase {
  /**
   * The customer ID that uniquely identifies the customer in your application
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-customer-id",
  })
  xCustomerId: string;

  /**
   * The provider name
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-provider-name",
  })
  xProviderName: string;
}

export class GetContactRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  pathParams: GetContactPathParams;

  @SpeakeasyMetadata()
  queryParams: GetContactQueryParams;

  @SpeakeasyMetadata()
  headers: GetContactHeaders;
}

export class GetContactResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Contact
   */
  @SpeakeasyMetadata()
  contact?: shared.Contact;
}
