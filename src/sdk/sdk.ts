/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as utils from "../internal/utils";
import { Accounts } from "./accounts";
import { Contacts } from "./contacts";
import { Leads } from "./leads";
import * as shared from "./models/shared";
import { Opportunities } from "./opportunities";
import { Passthrough } from "./passthrough";
import { Users } from "./users";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = [
    /**
     * Local Supaglue API
     */
    "http://localhost:8080/crm/v1",
] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
    /**
     * The security details required to authenticate the SDK
     */
    security?: shared.Security;
    /**
     * Allows overriding the default axios client used by the SDK
     */
    defaultClient?: AxiosInstance;

    /**
     * Allows overriding the default server used by the SDK
     */
    serverIdx?: number;

    /**
     * Allows overriding the default server URL used by the SDK
     */
    serverURL?: string;
};

export class SDKConfiguration {
    defaultClient: AxiosInstance;
    securityClient: AxiosInstance;
    serverURL: string;
    serverDefaults: any;
    language = "typescript";
    openapiDocVersion = "0.6.0";
    sdkVersion = "0.19.0";
    genVersion = "2.39.0";

    public constructor(init?: Partial<SDKConfiguration>) {
        Object.assign(this, init);
    }
}

/**
 * Supaglue CRM API: # Introduction
 *
 * @remarks
 * Welcome to the Supaglue unified CRM API documentation. You can use this API to read data that has been synced into Supaglue from third-party providers.
 * ### Base API URL
 * ```
 * http://localhost:8080/crm/v1
 * ```
 *
 *
 * @see {@link https://www.postman.com/supaglue/workspace/supaglue-public/overview} - Try out our API in Postman!
 */
export class Supaglue {
    /**
     * The `Account` Common Model is used to represent a "company" in CRMs.
     */
    public accounts: Accounts;
    /**
     * The `Contact` Common Model is used to represent a "contact" in CRMs.
     */
    public contacts: Contacts;
    /**
     * The `Lead` Common Model is used to represent a "potential customer" in CRMs.
     */
    public leads: Leads;
    /**
     * The `Opportunity` Common Model is used to represent a "deal opportunity" in CRMs.
     */
    public opportunities: Opportunities;
    /**
     * Passthrough operations to underlying providers.
     */
    public passthrough: Passthrough;
    /**
     * The `User` Common Model is used to represent a "user" that can login to CRMs.
     */
    public users: Users;

    private sdkConfiguration: SDKConfiguration;

    constructor(props?: SDKProps) {
        let serverURL = props?.serverURL;
        const serverIdx = props?.serverIdx ?? 0;

        if (!serverURL) {
            serverURL = ServerList[serverIdx];
        }

        const defaultClient = props?.defaultClient ?? axios.create({ baseURL: serverURL });
        let securityClient = defaultClient;

        if (props?.security) {
            let security: shared.Security = props.security;
            if (!(props.security instanceof utils.SpeakeasyBase)) {
                security = new shared.Security(props.security);
            }
            securityClient = utils.createSecurityClient(defaultClient, security);
        }

        this.sdkConfiguration = new SDKConfiguration({
            defaultClient: defaultClient,
            securityClient: securityClient,
            serverURL: serverURL,
        });

        this.accounts = new Accounts(this.sdkConfiguration);
        this.contacts = new Contacts(this.sdkConfiguration);
        this.leads = new Leads(this.sdkConfiguration);
        this.opportunities = new Opportunities(this.sdkConfiguration);
        this.passthrough = new Passthrough(this.sdkConfiguration);
        this.users = new Users(this.sdkConfiguration);
    }
}
